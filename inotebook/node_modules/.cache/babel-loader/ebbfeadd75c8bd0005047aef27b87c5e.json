{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mulev\\\\Desktop\\\\Custom OfficeWorks\\\\designer_Way\\\\iNotebook_RP\\\\inotebook\\\\src\\\\context\\\\notes\\\\notesState.js\",\n    _s = $RefreshSig$();\n\nimport NoteContext from \"./notesContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial); // Add a Note\n\n  const addNote = (title, description, tag) => {\n    // TODO: API Call\n    console.log(\"Adding a new note\");\n    const note = {\n      \"_id\": \"61322f119553781a8ca8ed0e08\",\n      \"user\": \"6131dc5e3e4037cd4734a0664\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2021-09-03T14:20:09.668Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  }; // Delete a Note\n\n\n  const deleteNote = id => {\n    // TODO: API Call\n    console.log('deleting the note with id.' + id);\n    const newNotes = notes.filter(notes => {\n      return notes._id != id;\n    }); // notes renew kro ek condition ke sath.\n\n    setNotes(newNotes);\n  }; // Edit a Note\n\n\n  const editNote = (id, title, description, tag) => {}; // logic to edit in client.\n\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"sources":["C:/Users/mulev/Desktop/Custom OfficeWorks/designer_Way/iNotebook_RP/inotebook/src/context/notes/notesState.js"],"names":["NoteContext","useState","NoteState","props","notesInitial","notes","setNotes","addNote","title","description","tag","console","log","note","concat","deleteNote","id","newNotes","filter","_id","editNote","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,YAAY,GACd,EADJ;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,YAAD,CAAlC,CAJyB,CAKzB;;AACA,QAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,GAArB,KAA6B;AACzC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMC,IAAI,GAAG;AACT,aAAO,4BADE;AAET,cAAQ,2BAFC;AAGT,eAASL,KAHA;AAIT,qBAAeC,WAJN;AAKT,aAAOC,GALE;AAMT,cAAQ,0BANC;AAOT,aAAO;AAPE,KAAb;AASAJ,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaD,IAAb,CAAD,CAAR;AACH,GAbD,CANyB,CAoBzB;;;AACA,QAAME,UAAU,GAAIC,EAAD,IAAQ;AACvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BI,EAA3C;AACA,UAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAN,CAAcb,KAAD,IAAW;AAAE,aAAOA,KAAK,CAACc,GAAN,IAAaH,EAApB;AAAwB,KAAlD,CAAjB,CAHuB,CAG+C;;AACtEV,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACH,GALD,CArByB,CA2BzB;;;AACA,QAAMG,QAAQ,GAAG,CAACJ,EAAD,EAAKR,KAAL,EAAYC,WAAZ,EAAyBC,GAAzB,KAAiC,CACjD,CADD,CA5ByB,CA8BzB;;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASE,MAAAA,OAAT;AAAkBQ,MAAAA,UAAlB;AAA8BK,MAAAA;AAA9B,KAA7B;AAAA,cACKjB,KAAK,CAACkB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArCD;;GAAMnB,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import NoteContext from \"./notesContext\";\r\nimport { useState } from \"react\";\r\nconst NoteState = (props) => {\r\n    const notesInitial =\r\n        [\r\n        ]\r\n    const [notes, setNotes] = useState(notesInitial)\r\n    // Add a Note\r\n    const addNote = (title, description, tag) => {\r\n        // TODO: API Call\r\n        console.log(\"Adding a new note\")\r\n        const note = {\r\n            \"_id\": \"61322f119553781a8ca8ed0e08\",\r\n            \"user\": \"6131dc5e3e4037cd4734a0664\",\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"tag\": tag,\r\n            \"date\": \"2021-09-03T14:20:09.668Z\",\r\n            \"__v\": 0\r\n        };\r\n        setNotes(notes.concat(note))\r\n    }\r\n    // Delete a Note\r\n    const deleteNote = (id) => {\r\n        // TODO: API Call\r\n        console.log('deleting the note with id.' + id);\r\n        const newNotes = notes.filter((notes) => { return notes._id != id }); // notes renew kro ek condition ke sath.\r\n        setNotes(newNotes);\r\n    }\r\n    // Edit a Note\r\n    const editNote = (id, title, description, tag) => {\r\n    }\r\n    // logic to edit in client.\r\n\r\n    return (\r\n        <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote }}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    )\r\n}\r\nexport default NoteState;"]},"metadata":{},"sourceType":"module"}